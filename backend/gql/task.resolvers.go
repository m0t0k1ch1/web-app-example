package gql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"app/gen/gqlgen"
	"context"
	"fmt"
)

// CreateTask is the resolver for the createTask field.
func (r *mutationResolver) CreateTask(ctx context.Context, input gqlgen.CreateTaskInput) (*gqlgen.CreateTaskPayload, error) {
	panic(fmt.Errorf("not implemented: CreateTask - createTask"))
}

// CompleteTask is the resolver for the completeTask field.
func (r *mutationResolver) CompleteTask(ctx context.Context, input gqlgen.CompleteTaskInput) (*gqlgen.CompleteTaskPayload, error) {
	panic(fmt.Errorf("not implemented: CompleteTask - completeTask"))
}

// Tasks is the resolver for the tasks field.
func (r *queryResolver) Tasks(ctx context.Context, after *string, first int32) (*gqlgen.TaskConnection, error) {
	panic(fmt.Errorf("not implemented: Tasks - tasks"))
}
