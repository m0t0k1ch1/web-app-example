syntax = "proto3";

package app.v1;

import "validate/validate.proto";

message Task {
  string id = 1;
  string title = 2;
  bool is_completed = 3;
  int64 updated_at = 4;
  int64 created_at = 5;
}

message PingRequest {}

message PingResponse {}

message CreateTaskRequest {
  string title = 1 [
    (validate.rules).string.min_len = 1,
    (validate.rules).string.max_len = 32
  ];
}

message CreateTaskResponse { Task task = 1; }

message GetTaskRequest {
  string id = 1 [ (validate.rules).string.min_len = 1 ];
}

message GetTaskResponse { Task task = 1; }

message ListTasksRequest {}

message ListTasksResponse { repeated Task tasks = 1; }

message UpdateTaskRequest {
  string id = 1 [ (validate.rules).string.min_len = 1 ];
  string title = 2 [
    (validate.rules).string.min_len = 1,
    (validate.rules).string.max_len = 32
  ];
}

message UpdateTaskResponse { Task task = 1; }

message MakeTaskCompleteRequest {
  string id = 1 [ (validate.rules).string.min_len = 1 ];
}

message MakeTaskCompleteResponse { Task task = 1; }

message MakeTaskIncompleteRequest {
  string id = 1 [ (validate.rules).string.min_len = 1 ];
}

message MakeTaskIncompleteResponse { Task task = 1; }

message DeleteTaskRequest {
  string id = 1 [ (validate.rules).string.min_len = 1 ];
}

message DeleteTaskResponse {}

service AppService {
  rpc Ping(PingRequest) returns (PingResponse) {}
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {}
  rpc GetTask(GetTaskRequest) returns (GetTaskResponse) {}
  rpc ListTasks(ListTasksRequest) returns (ListTasksResponse) {}
  rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse) {}
  rpc MakeTaskComplete(MakeTaskCompleteRequest)
      returns (MakeTaskCompleteResponse) {}
  rpc MakeTaskIncomplete(MakeTaskIncompleteRequest)
      returns (MakeTaskIncompleteResponse) {}
  rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse) {}
}
