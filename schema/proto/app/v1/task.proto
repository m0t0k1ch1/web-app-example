syntax = "proto3";

package app.v1;

import "validate/validate.proto";

enum TaskStatus {
  TASK_STATUS_UNSPECIFIED = 0;
  TASK_STATUS_UNCOMPLETED = 1;
  TASK_STATUS_COMPLETED = 2;
}

message Task {
  string id = 1;
  string title = 2;
  TaskStatus status = 3;
}

message TaskServiceCreateRequest {
  string title = 1 [(validate.rules).string = {
    min_len: 1,
    max_len: 32
  }];
}

message TaskServiceCreateResponse {
  Task task = 1;
}

message TaskServiceGetRequest {
  string id = 1 [(validate.rules).string = {min_len: 1}];
}

message TaskServiceGetResponse {
  Task task = 1;
}

message TaskServiceListRequest {}

message TaskServiceListResponse {
  repeated Task tasks = 1;
}

message TaskServiceUpdateTitleRequest {
  string id = 1 [(validate.rules).string = {min_len: 1}];
  string title = 2 [(validate.rules).string = {
    min_len: 1,
    max_len: 32
  }];
}

message TaskServiceUpdateTitleResponse {
  Task task = 1;
}

message TaskServiceUpdateStatusRequest {
  string id = 1 [(validate.rules).string = {min_len: 1}];
  TaskStatus status = 2 [(validate.rules).enum = {
    in: [
      1,
      2
    ]
  }];
}

message TaskServiceUpdateStatusResponse {
  Task task = 1;
}

message TaskServiceDeleteRequest {
  string id = 1 [(validate.rules).string = {min_len: 1}];
}

message TaskServiceDeleteResponse {}

service TaskService {
  rpc Create(TaskServiceCreateRequest) returns (TaskServiceCreateResponse) {}
  rpc Get(TaskServiceGetRequest) returns (TaskServiceGetResponse) {}
  rpc List(TaskServiceListRequest) returns (TaskServiceListResponse) {}
  rpc UpdateTitle(TaskServiceUpdateTitleRequest) returns (TaskServiceUpdateTitleResponse) {}
  rpc UpdateStatus(TaskServiceUpdateStatusRequest) returns (TaskServiceUpdateStatusResponse) {}
  rpc Delete(TaskServiceDeleteRequest) returns (TaskServiceDeleteResponse) {}
}
